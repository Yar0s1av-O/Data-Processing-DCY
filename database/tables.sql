-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."File location"
(
    watchable_id integer NOT NULL,
    quality_id integer NOT NULL,
    link_to_the_file text COLLATE pg_catalog."default",
    CONSTRAINT "File location_pkey" PRIMARY KEY (watchable_id, quality_id)
);

CREATE TABLE IF NOT EXISTS public."Genres"
(
    genre_id serial NOT NULL,
    genre_name text COLLATE pg_catalog."default",
    CONSTRAINT "Genres_pkey" PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS public."Language"
(
    language_id serial NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT "Language_pkey" PRIMARY KEY (language_id)
);

CREATE TABLE IF NOT EXISTS public."Preferences"
(
    profile_id integer NOT NULL,
    genre_id integer NOT NULL,
    CONSTRAINT "Preferences_pkey" PRIMARY KEY (profile_id, genre_id)
);

CREATE TABLE IF NOT EXISTS public."Profiles"
(
    profile_id serial NOT NULL,
    user_id integer,
    profile_name text COLLATE pg_catalog."default",
    profile_photo_link text COLLATE pg_catalog."default",
    age smallint,
    language_id integer,
    CONSTRAINT "Profiles_pkey" PRIMARY KEY (profile_id)
);

CREATE TABLE IF NOT EXISTS public."Qualities"
(
    quality_id serial NOT NULL,
    name text COLLATE pg_catalog."default",
    CONSTRAINT "Qualities_pkey" PRIMARY KEY (quality_id)
);

CREATE TABLE IF NOT EXISTS public."Subscriptions"
(
    subscription_type_id serial NOT NULL,
    subscription_name text COLLATE pg_catalog."default",
    subscription_price_euro real,
    CONSTRAINT "Subscriptions_pkey" PRIMARY KEY (subscription_type_id)
);

CREATE TABLE IF NOT EXISTS public."Subtitles"
(
    language_id integer NOT NULL,
    watchable_id integer NOT NULL,
    link text COLLATE pg_catalog."default",
    CONSTRAINT "Subtitles_pkey" PRIMARY KEY (language_id, watchable_id)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    user_id integer NOT NULL DEFAULT nextval('user_user_id_seq'::regclass),
    email text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    failed_login_attempts smallint,
    blocked boolean DEFAULT false,
    state_of_discount_type_id smallint DEFAULT 1,
    subscription_type_id smallint,
    subscription_end_date timestamp with time zone DEFAULT (now() - '1 mon'::interval),
    name text COLLATE pg_catalog."default",
    profile_picture text COLLATE pg_catalog."default",
    credit integer DEFAULT 0,
    CONSTRAINT user_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."Watch history"
(
    profile_id integer NOT NULL,
    watchable_id integer NOT NULL,
    time_stopped time without time zone,
    CONSTRAINT "Watch history_pkey" PRIMARY KEY (profile_id, watchable_id)
);

CREATE TABLE IF NOT EXISTS public."Watchable"
(
    watchable_id serial NOT NULL,
    title text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    genre_id integer,
    duration time without time zone,
    season integer,
    episode integer,
    CONSTRAINT "Watchable_pkey" PRIMARY KEY (watchable_id)
);

CREATE TABLE IF NOT EXISTS public."Watchlist"
(
    profile_id integer NOT NULL,
    watchable_id integer NOT NULL,
    CONSTRAINT "Watchlist_pkey" PRIMARY KEY (profile_id, watchable_id)
);

CREATE TABLE IF NOT EXISTS public.invitations
(
    invited_user_email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    invite_by_user_id integer NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT invitations_pkey PRIMARY KEY (invited_user_email, invite_by_user_id)
);

ALTER TABLE IF EXISTS public."File location"
    ADD CONSTRAINT quality_id_fk FOREIGN KEY (quality_id)
    REFERENCES public."Qualities" (quality_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."File location"
    ADD CONSTRAINT watchable_id_fk FOREIGN KEY (watchable_id)
    REFERENCES public."Watchable" (watchable_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Preferences"
    ADD CONSTRAINT genre_id_fk FOREIGN KEY (genre_id)
    REFERENCES public."Genres" (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Preferences"
    ADD CONSTRAINT profile_id_fk FOREIGN KEY (profile_id)
    REFERENCES public."Profiles" (profile_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Profiles"
    ADD CONSTRAINT language_id_fk FOREIGN KEY (language_id)
    REFERENCES public."Language" (language_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Profiles"
    ADD CONSTRAINT user_id_fk FOREIGN KEY (user_id)
    REFERENCES public."Users" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Subtitles"
    ADD CONSTRAINT language_id_fk FOREIGN KEY (language_id)
    REFERENCES public."Language" (language_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Subtitles"
    ADD CONSTRAINT watchable_id_fk FOREIGN KEY (watchable_id)
    REFERENCES public."Watchable" (watchable_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Users"
    ADD CONSTRAINT subscription_type_id_fk FOREIGN KEY (subscription_type_id)
    REFERENCES public."Subscriptions" (subscription_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Watch history"
    ADD CONSTRAINT profile_id_fk FOREIGN KEY (profile_id)
    REFERENCES public."Profiles" (profile_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Watch history"
    ADD CONSTRAINT watchable_id_fk FOREIGN KEY (watchable_id)
    REFERENCES public."Watchable" (watchable_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Watchable"
    ADD CONSTRAINT genre_id_fk FOREIGN KEY (genre_id)
    REFERENCES public."Genres" (genre_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Watchlist"
    ADD CONSTRAINT profile_id_fk FOREIGN KEY (profile_id)
    REFERENCES public."Profiles" (profile_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Watchlist"
    ADD CONSTRAINT watchable_id_fk FOREIGN KEY (watchable_id)
    REFERENCES public."Watchable" (watchable_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.invitations
    ADD CONSTRAINT invited_user_email FOREIGN KEY (invite_by_user_id)
    REFERENCES public."Users" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.invitations
    ADD CONSTRAINT invited_user_email_fk FOREIGN KEY (invited_user_email)
    REFERENCES public."Users" (email) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS idx_invitations_invited_user
    ON public.invitations(invited_user_email);

END;
openapi: 3.0.0
info:
  title: Netflix API Documentation
  version: 1.0.0
  description: Comprehensive API documentation for all services in the Netflix API project.
servers:
  - url: http://localhost:4000
    description: Local server

paths:
  /users/register:
    post:
      summary: Register a new user
      description: Creates a new user account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "securepassword"
      responses:
        '201':
          description: User registered successfully.
        '400':
          description: Invalid input.

  /users/login:
    post:
      summary: Log in a user
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "securepassword"
      responses:
        '200':
          description: Login successful.
        '404':
          description: Invalid email or password.

  /users:
    get:
      summary: Get all users
      description: Fetches all users.
      responses:
        '200':
          description: List of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    email:
                      type: string

  /users/{id}:
    get:
      summary: Get user by ID
      description: Fetches details of a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details fetched successfully.
        '404':
          description: User not found.
    put:
      summary: Update user by ID
      description: Updates user details.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully.
        '404':
          description: User not found.
    delete:
      summary: Delete user by ID
      description: Deletes a user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted successfully.
        '404':
          description: User not found.

  /profiles:
    get:
      summary: Get all profiles
      description: Fetches all profiles.
      responses:
        '200':
          description: List of profiles.

  /profiles/{id}:
    get:
      summary: Get profile by ID
      description: Fetches details of a specific profile.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profile details fetched successfully.
        '404':
          description: Profile not found.
    put:
      summary: Update profile by ID
      description: Updates profile details.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_photo_link:
                  type: string
                age:
                  type: integer
                language:
                  type: string
      responses:
        '200':
          description: Profile updated successfully.
        '404':
          description: Profile not found.
    delete:
      summary: Delete profile by ID
      description: Deletes a profile.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Profile deleted successfully.
        '404':
          description: Profile not found.

  /subscriptions:
    get:
      summary: Get all subscriptions
      description: Fetches all subscriptions.
      responses:
        '200':
          description: List of subscriptions.

  /subscriptions/{id}:
    get:
      summary: Get subscription by ID
      description: Fetches details of a specific subscription.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscription details fetched successfully.
        '404':
          description: Subscription not found.
    put:
      summary: Update subscription by ID
      description: Updates subscription details.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_name:
                  type: string
                subscription_price_euro:
                  type: number
      responses:
        '200':
          description: Subscription updated successfully.
        '404':
          description: Subscription not found.
    delete:
      summary: Delete subscription by ID
      description: Deletes a subscription.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscription deleted successfully.
        '404':
          description: Subscription not found.

  /exports/users:
    get:
      summary: Export all users
      description: Exports all user data.
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml]
      responses:
        '200':
          description: Export successful.

  /exports/profiles:
    get:
      summary: Export all profiles
      description: Exports all profile data.
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml]
      responses:
        '200':
          description: Export successful.

  /exports/subscriptions:
    get:
      summary: Export all subscriptions
      description: Exports all subscription data.
      parameters:
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, xml]
      responses:
        '200':
          description: Export successful.

  /auth/google:
    get:
      summary: Google OAuth login
      description: Initiates Google authentication.
      responses:
        '302':
          description: Redirect to Google OAuth.

  /auth/google/callback:
    get:
      summary: Google OAuth callback
      description: Callback URL after Google authentication.
      responses:
        '200':
          description: Authentication successful.
        '401':
          description: Authentication failed.

  /logout:
    get:
      summary: Log out user
      description: Logs out the authenticated user.
      responses:
        '200':
          description: Logout successful.
